CREATE DATABASE zuifi_db;

CREATE TABLE language (
	id INT NOT NULL AUTO_INCREMENT,
	name VARCHAR(30) NOT NULL,
	code VARCHAR(5) NOT NULL,
	PRIMARY KEY (id)
);

CREATE TABLE category (
	id INT NOT NULL AUTO_INCREMENT,
	menu_weight INT NOT NULL,
	parent_id INT,
	PRIMARY KEY (id),
	FOREIGN KEY (parent_id) REFERENCES category(id)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE categorytext (
	id INT NOT NULL AUTO_INCREMENT,
	name VARCHAR(30) NOT NULL,
	description VARCHAR(500),
	urlname VARCHAR(120) NOT NULL,
	published BOOLEAN NOT NULL,
	language_id INT,
	category_id INT,
	PRIMARY KEY (id),
	FOREIGN KEY (language_id) REFERENCES language(id)
		ON DELETE SET NULL
		ON UPDATE CASCADE,
	FOREIGN KEY (category_id) REFERENCES category(id)
		ON DELETE SET NULL
		ON UPDATE CASCADE
);

CREATE TABLE user (
	id INT NOT NULL AUTO_INCREMENT,
	name VARCHAR(20),
	permissionlevel VARCHAR(25),
	password VARCHAR(255),
	registered TIMESTAMP,
	loginattempts INT NOT NULL,
	remember_token VARCHAR(100),
	PRIMARY KEY (id)
);

CREATE TABLE article (
	id INT NOT NULL AUTO_INCREMENT,
	category_id INT,
	user_id INT,
	published BOOLEAN NOT NULL,
	timestamp TIMESTAMP,
	PRIMARY KEY (id),
	FOREIGN KEY (category_id) REFERENCES category(id)
		ON DELETE SET NULL
		ON UPDATE CASCADE,
	FOREIGN KEY (user_id) REFERENCES user(id)
		ON DELETE SET NULL
		ON UPDATE CASCADE
);

CREATE TABLE tag (
	id INT NOT NULL AUTO_INCREMENT,
	text VARCHAR(30) NOT NULL,
	language_id INT,
	article_id INT NOT NULL,
	PRIMARY KEY (id),
	FOREIGN KEY (language_id) REFERENCES language(id)
		ON DELETE SET NULL
		ON UPDATE CASCADE,
	FOREIGN KEY (article_id) REFERENCES article(id)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE summarybox (
	id INT NOT NULL AUTO_INCREMENT,
	topic VARCHAR(120) NOT NULL,
	weight INT NOT NULL,
	language_id INT,
	article_id INT NOT NULL,
	PRIMARY KEY (id),
	FOREIGN KEY (language_id) REFERENCES language(id)
		ON DELETE SET NULL
		ON UPDATE CASCADE,
	FOREIGN KEY (article_id) REFERENCES article(id)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TABLE comment (
	id INT NOT NULL AUTO_INCREMENT,
	writer VARCHAR(50) NOT NULL,
	text VARCHAR(500) NOT NULL,
	language_id INT,
	article_id INT,
	PRIMARY KEY (id),
	FOREIGN KEY (language_id) REFERENCES language(id)
		ON DELETE SET NULL
		ON UPDATE CASCADE,
	FOREIGN KEY (article_id) REFERENCES article(id)
		ON DELETE SET NULL
		ON UPDATE CASCADE
);

CREATE TABLE articletext (
	id INT NOT NULL AUTO_INCREMENT,
	text TEXT NOT NULL,
	topic VARCHAR(120) NOT NULL,
	urlname VARCHAR(120) NOT NULL,
	published BOOLEAN NOT NULL,
	language_id INT,
	article_id INT,
	PRIMARY KEY (id),
	FOREIGN KEY (language_id) REFERENCES language(id)
		ON DELETE SET NULL
		ON UPDATE CASCADE,
	FOREIGN KEY (article_id) REFERENCES article(id)
		ON DELETE SET NULL
		ON UPDATE CASCADE
);

CREATE TABLE visitedplace (
	id INT NOT NULL AUTO_INCREMENT,
	locationname TEXT NOT NULL,
	lat VARCHAR(20) NOT NULL,
	lng VARCHAR(20) NOT NULL,
	PRIMARY KEY (id)
);

INSERT INTO language (name, code) VALUES ("suomi", "fi");
INSERT INTO language (name, code) VALUES ("english", "en");
INSERT INTO user (name, permissionlevel, password, loginattempts) VALUES ("Username", "admin", "hash", 0);